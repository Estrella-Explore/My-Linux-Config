edit:
  - "| 单位    | 向左移动 | 向右移动 | 向左删除  | 向右删除 |"
  - "| 字符    | Ctrl + B | Ctrl + F | Ctrl + H  | Ctrl + D |"
  - "| 单词    | Alt + B  | Alt + F  | Ctrl + W  | Alt + D  |"
  - "| 行首/尾 | Ctrl + A | Ctrl + E | Ctrl + U  | Ctrl + K |"
rpm:
  - "rpm -qa 查询当前系统中安装的所有的包"
  - "rpm -ivh --force --nodeps url"
  - "rpm -qf 可以找到一个文件对应的包"
  - "yum whatprovides xxd"
  - "rpm -q --changelog php"
find:
  - "find /tmp -size 0 -print0 -delete: 删除大小为 0 的文件"
  - "@todo 这里没有完全搞清楚"
  - "find 和 xargs 混合使用的时候，分别加上 -print0 和 -0"
  - "find . -type f -print0 | xargs -0 md5sum"
  - "https://www.shellcheck.net/wiki/SC2038"
  - "hash: find path/to/folder -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum"
git:
  - git log --format="%h --> %B"
  - -> 如何删除一个已经提交的行为
  - git reset --hard HEAD~1
  - git push -f <remote> <branch>
  - git tag -d tagname
  - git push --delete origin tagname
  - -> 仅仅 push 一个 tag
  - git push origin tagname
  - -> 将本地设置为和远程完全相同
  - git fetch origin
  - git reset --hard origin/master
  - -> 如果 git blame 一个已经被删除的内容
  - git log -S <string> path/to/file
  - -> 如何将多个 commit squash 一下
  - git reset --soft HEAD~3 && git commit
python:
  - "python -m venv .venv"
  - "source .venv/bin/activate"
grep:
  - "-o, --only-matching : 仅仅打印匹配的部分而不是该行"
  - "grep -nr 'yourString*' . : rg 没有的时候用下"
  - "@todo 其中的 -nr 是啥意思"
  - "@todo grep -e aaa -e bbb"
printf:
  - 打印数组，是针对所有成员一次操作的
curl:
  - curl -LO --output-dir . www.baidu.com
  - -L 如果发生了重定向，那么继续重定向
  - -O 使用远程的名称
  - --output-dir 只有比较新的版本才支持
dd:
  - dd if=/dev/zero of=pmem count=4 bs=10M # 基本测试
  - dd if=ubuntu-22.04.2-desktop-amd64.iso of=/dev/sdc # 使用 dd 安装系统

ps:
  - ps --ppid 2 -p 2 -o uname,pid,ppid,cmd,cls
    - 列举出来所有的内核线程
    - https://unix.stackexchange.com/questions/411159/linux-is-it-possible-to-see-only-kernel-space-threads-process
    - # @todo 理解一下这是啥含义
  - ps -elf # @todo 这个几个都是啥含义
  - ps aux --sort -rss # 对于内存数量排序
perf:
  - ls # @todo 等待整理

bpftrace:
  - ls # @todo 等待整理

todo:
  - ls # @todo 将 sheet.md 中的内容整理到此处，一个各种诊断工具，例如 ptrace
vimscript:
  - "调试方法 echom 然后 :message 查看，注意不能是 echo"
nvim:
  - vim.api.nvim_err_writeln("hello \n") -- 不要忘记 \n
  - nvim "+let g:auto_session_enabled = v:false" -c ":e mm/gup.c" -c "lua vim.loop.new_timer():start(1000 * 60 * 30, 0, vim.schedule_wrap(function() vim.api.nvim_command(\"exit\") end))"
screen:
  - screen -d -m sleep 1000
  - screen -r
  - screen -list
stress:
  - stress-ng --vm-bytes 40000M --vm-keep --vm 8
gnome:
  - eog # 在终端中打开图片
